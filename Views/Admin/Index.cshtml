@model IEnumerable<BookHive.Models.ApplicationUser>
@using Microsoft.AspNetCore.Identity
@inject UserManager<BookHive.Models.ApplicationUser> UserManager

@{
    ViewData["Title"] = "Admin Dashboard";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css" rel="stylesheet">


<div class="container py-5">
    <h2 class="text-center mb-5 fw-bold text-primary" style="font-family: 'Merriweather', serif; font-size: 2.5rem;"><i class="bi bi-gear-wide-connected me-2"></i>Admin Dashboard</h2>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show text-center" role="alert">
            <i class="bi bi-check-circle-fill me-2"></i>@TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show text-center" role="alert">
            <i class="bi bi-exclamation-triangle-fill me-2"></i>@TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <!-- Filter Buttons -->
    <div class="d-flex justify-content-center mb-4">
        <div class="btn-group shadow-sm" role="group">
            <button type="button" class="btn btn-outline-primary active px-4 py-2" onclick="filterUsers('all')">
                <i class="bi bi-people-fill me-1"></i>All Users
            </button>
            <button type="button" class="btn btn-outline-primary px-4 py-2" onclick="filterUsers('Admin')">
                <i class="bi bi-shield-lock-fill me-1"></i>Admins
            </button>
            <button type="button" class="btn btn-outline-primary px-4 py-2" onclick="filterUsers('Staff')">
                <i class="bi bi-briefcase-fill me-1"></i>Staff
            </button>
            <button type="button" class="btn btn-outline-primary px-4 py-2" onclick="filterUsers('Member')">
                <i class="bi bi-person-fill me-1"></i>Members
            </button>
        </div>
    </div>

    <div class="row g-4" id="userList">
        @foreach (var user in Model)
        {
            var roles = await UserManager.GetRolesAsync(user);
            var roleClass = roles.Any() ? string.Join(" ", roles) : "NoRole";
            <div class="col-md-6 col-lg-4 user-item" data-roles="@roleClass">
                <div class="card h-100 shadow border-0" style="transition: transform 0.2s;">
                    <div class="card-body d-flex">
                        <div class="me-3 flex-shrink-0">
                            @if (!string.IsNullOrEmpty(user.ProfileImageUrl))
                            {
                                <img src="@user.ProfileImageUrl" alt="@user.UserName" class="rounded-circle border" style="width:60px;height:60px;object-fit:cover;" />
                            }
                            else
                            {
                                <div class="bg-light rounded-circle d-flex align-items-center justify-content-center border" style="width:60px;height:60px;">
                                    <i class="bi bi-person-circle text-muted" style="font-size:1.5rem;"></i>
                                </div>
                            }
                        </div>
                        <div class="flex-fill">
                            <h5 class="card-title mb-1 text-dark fw-semibold">@user.UserName</h5>
                            <p class="card-text mb-1 text-muted"><i class="bi bi-envelope-fill me-1"></i>@user.Email</p>
                            <p class="card-text">
                                <i class="bi bi-tags-fill me-1 text-primary"></i>
                                @if (roles.Any())
                                {
                                    @foreach (var r in roles)
                                    {
                                        <span class="badge bg-primary-subtle text-primary rounded-pill me-1">@r</span>
                                    }
                                }
                                else
                                {
                                    <span class="badge bg-secondary-subtle text-secondary rounded-pill">None</span>
                                }
                            </p>
                        </div>
                    </div>
                    <div class="card-footer bg-white border-0 d-flex justify-content-end gap-2">
                        <a asp-action="ViewProfile" asp-route-id="@user.Id" class="btn btn-sm btn-primary rounded-pill px-3">
                            <i class="bi bi-eye me-1"></i>View
                        </a>
                        <a asp-action="SendDeletionNotice" asp-route-id="@user.Id" class="btn btn-sm btn-danger rounded-pill px-3">
                            <i class="bi bi-trash me-1"></i>Delete
                        </a>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script>
        function filterUsers(role) {
            // button active state
            document.querySelectorAll('.btn-group .btn').forEach(btn => btn.classList.remove('active'));
            document.querySelector(`button[onclick="filterUsers('${role}')"]`).classList.add('active');

            // show/hide cards
            document.querySelectorAll('.user-item').forEach(item => {
                if (role === 'all') {
                    item.style.display = '';
                } else {
                    const roles = item.getAttribute('data-roles').split(' ');
                    item.style.display = roles.includes(role) ? '' : 'none';
                }
            });
        }
        // init
        filterUsers('all');

        // Add hover effect for cards
        document.querySelectorAll('.card').forEach(card => {
            card.addEventListener('mouseover', () => {
                card.style.transform = 'scale(1.03)';
            });
            card.addEventListener('mouseout', () => {
                card.style.transform = 'scale(1)';
            });
        });
    </script>
}